<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.xihrni.com</id>
    <title>我的世界</title>
    <updated>2023-01-30T01:02:06.164Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.xihrni.com"/>
    <link rel="self" href="https://www.xihrni.com/atom.xml"/>
    <subtitle>君子和而不同。穷则独善其身，达则兼济天下。</subtitle>
    <logo>https://www.xihrni.com/images/avatar.png</logo>
    <icon>https://www.xihrni.com/favicon.ico</icon>
    <rights>All rights reserved 2023, 我的世界</rights>
    <entry>
        <title type="html"><![CDATA[MacOS 13.1（Ventura）外接显示器开启自定义HiDPI]]></title>
        <id>https://www.xihrni.com/post/macos-131venturawai-jie-xian-shi-qi-kai-qi-zi-ding-yi-hidpi/</id>
        <link href="https://www.xihrni.com/post/macos-131venturawai-jie-xian-shi-qi-kai-qi-zi-ding-yi-hidpi/">
        </link>
        <updated>2023-01-28T11:23:52.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>😳更新13版本系统之前使用的是SwitchResX进行尝试开启HiDPI，但常规也只能强制开启2/1的分辨率，这样会导致布局非常紧凑，使用3.5k、2.5k、2k显示器的用户应该非常懂（比如2560<em>1080原生分辨率，开启2/1的HiDPI，布局模拟成了1280</em>540的分辨率，然后在一个25寸或者29寸的显示器上显示出这么小的布局可想而知有多么难受。但是如果不开HiDPI，由于MacOS系统的特性，导致字体看着会有锯齿）</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>😳更新13版本系统之前使用的是SwitchResX进行尝试开启HiDPI，但常规也只能强制开启2/1的分辨率，这样会导致布局非常紧凑，使用3.5k、2.5k、2k显示器的用户应该非常懂（比如2560<em>1080原生分辨率，开启2/1的HiDPI，布局模拟成了1280</em>540的分辨率，然后在一个25寸或者29寸的显示器上显示出这么小的布局可想而知有多么难受。但是如果不开HiDPI，由于MacOS系统的特性，导致字体看着会有锯齿）</p>
</blockquote>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1675036865524.png" alt="1080P分辨率显示器只能开启2分之1的HiDPI" loading="lazy"></figure>
<h3 id="betterdisplay">BetterDisplay</h3>
<blockquote>
<p>BetterDisplay 可用于在 Mac 创建虚拟高分辨率显示器然后以屏幕镜像形式输出到物理低分辨率显示器。软件原名「BetterDummy，自 1.2.6 版本更名」此软件能替代一键 HiDPi 脚本，在 macOS 11.0 及以上版本推荐 2K 及 1080P 屏幕用户使用。</p>
</blockquote>
<p>原本使用这个软件可以通过开启一个虚拟屏幕后镜像给物理屏幕达到开启HiDPI的方式，由于MacOS对于4K以下的分辨率进行限制无法开启HiDPI，所以虚拟屏幕自定义分辨率到4K以上进行欺骗系统，但是由于增加了一个虚拟屏幕还是会导致性能的损耗，以及会在不同显示器间出现各式各样的问题，这个方法一直未使用。</p>
<p>最近更新完系统后又搜了搜开启HiDPI的方法，发现这款软件已经实现直接开启HiDPI，无需自己计算填写分辨率，即可列出所有可选择的HiDPI分辨率进行选择，非常方便。</p>
<figure data-type="image" tabindex="2"><img src="https://www.xihrni.com/post-images/1675037948740.png" alt="3440*1440分辨率显示器开启所有HiDPI选项" loading="lazy"></figure>
<p>以上是我34寸显示器，3440<em>1440原生分辨率设置之后自动开启的HiDPI分辨率选项，测试下来我的目视距离（眼睛到显示器）2560</em>1080HiDPI看起来最舒服。</p>
<h3 id="软件设置">软件设置</h3>
<ol>
<li>下载并打开软件，目前版本为 <code>v1.3.16</code> 👉🏻<a href="https://github.com/waydabber/BetterDisplay">github下载地址</a></li>
<li>在菜单栏中找到此软件图标，进入设置<br>
<img src="https://www.xihrni.com/post-images/1675039953960.png" alt="" loading="lazy"></li>
<li>在需要开启的显示器下方勾选这3项<br>
<img src="https://www.xihrni.com/post-images/1675040069637.png" alt="" loading="lazy"></li>
<li>点击应用后重启电脑</li>
<li>在系统设置-显示器中点击显示所有分辨率已经可以看到全部HiDPI选项了<br>
<img src="https://www.xihrni.com/post-images/1675040189319.png" alt="" loading="lazy"></li>
</ol>
<blockquote>
<p>参考网址：https://betheme.net/houduan/44667.html</p>
</blockquote>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 远程克隆/拉取提示：'Permission denied (publickey).' 解决记录 for Windows版本]]></title>
        <id>https://www.xihrni.com/post/git-yuan-cheng-ke-long-la-qu-ti-shi-permission-denied-publickey-jie-jue-ji-lu-for-windows-ban-ben/</id>
        <link href="https://www.xihrni.com/post/git-yuan-cheng-ke-long-la-qu-ti-shi-permission-denied-publickey-jie-jue-ji-lu-for-windows-ban-ben/">
        </link>
        <updated>2022-05-16T08:49:17.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>😳这两天换Windows笔记本，想在本地开发，装好git后执行 <code>git clone xxx</code> 提示 <code>Permission denied (publickey).</code>。想起是没有设置秘钥，然后按照之前的文章，生成秘钥、上传公钥，接着再次执行 <code>git clone xxx</code>，发现还是提示 <code>Permission denied (publickey).</code></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>😳这两天换Windows笔记本，想在本地开发，装好git后执行 <code>git clone xxx</code> 提示 <code>Permission denied (publickey).</code>。想起是没有设置秘钥，然后按照之前的文章，生成秘钥、上传公钥，接着再次执行 <code>git clone xxx</code>，发现还是提示 <code>Permission denied (publickey).</code></p>
</blockquote>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1652692166063.png" alt="Permission denied" loading="lazy"></figure>
<h3 id="git-版本">Git 版本</h3>
<p>折腾了半天：重新生成秘钥、指定秘钥、文件夹权限等，还换了远程仓库试了试，发现好像只有 <code>Coding</code> 的平台会这样。最后没办法还是提交工单找到了解决办法（Windows网上真就没什么人出问题？）😓，原来是Git客户端版本太高（大于或等于 <code>2.33.1</code>）导致 <code>RSA</code> 算法被禁用。</p>
<blockquote>
<p><a href="https://help.coding.net/docs/repo/faq.html#permission-denied">参考文章</a><br>
<img src="https://www.xihrni.com/post-images/1652692829075.png" alt="参考文章" loading="lazy"></p>
</blockquote>
<p>经测试如果使用上面说的在 config 配置中加入上面两行，反而会报 <code>Bad configuration option: pubkeyacceptedalgorithms</code> 这样的错误，查了一下好像是 <code>OpenSS</code> 的版本又太低了。最后还是通过新的加密方式命令： <code>ssh-keygen -t ed25519 -C &quot;xxx@xx.xx&quot;</code>，重新生成了一下秘钥，上传新的秘钥靠谱，一次解决</p>
<figure data-type="image" tabindex="2"><img src="https://www.xihrni.com/post-images/1652693502202.png" alt="clone成功" loading="lazy"></figure>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[新电脑被植入 Lockbit 勒索病毒记录]]></title>
        <id>https://www.xihrni.com/post/xin-dian-nao-bei-zhi-ru-lockbit-le-suo-bing-du-ji-lu/</id>
        <link href="https://www.xihrni.com/post/xin-dian-nao-bei-zhi-ru-lockbit-le-suo-bing-du-ji-lu/">
        </link>
        <updated>2021-09-04T02:51:31.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>😳帮客户推荐了一台品牌主机：HP 战99 Pro（i5 16G 512G固态那款），客户自己去找供应商买的。买回来后我帮忙重新安装了win10专业版系统，由于家庭版系统不能远程桌面，主要安装了一些常用软件、开发环境（宝塔面板）、编辑器之类的，还配置了 <code>frp</code> 代理远程桌面端口，由于不太放心所以安装了腾讯安全管家</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>😳帮客户推荐了一台品牌主机：HP 战99 Pro（i5 16G 512G固态那款），客户自己去找供应商买的。买回来后我帮忙重新安装了win10专业版系统，由于家庭版系统不能远程桌面，主要安装了一些常用软件、开发环境（宝塔面板）、编辑器之类的，还配置了 <code>frp</code> 代理远程桌面端口，由于不太放心所以安装了腾讯安全管家</p>
</blockquote>
<!-- more -->
<p><img src="https://www.xihrni.com/post-images/1631070601756.png" alt="win10专业版" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1631070818619.png" alt="frp客户端配置" loading="lazy"></p>
<h3 id="远程连接异常">远程连接异常</h3>
<blockquote>
<p>这台主机目的是为了部署一个网站放到本地网络访问使用，所以为了能远程更新操作配置了 <code>frp</code> 将端口开放到外网请求，可以使用Windows自带的远程桌面，另外还装了向日葵防止 <code>frp</code> 连接不上时可以检查问题（向日葵远程太卡）</p>
</blockquote>
<p>在第4天突然访问电脑的时候出现一直连接中，进度条来来回回滚动也不提示连接失败，最开始以为是我这边网络问题，找了其他人帮忙访问也是一样的结果，首先怀疑是 <code>frp</code> 是否连接正常，访问管理面板发现主机在线中</p>
<p><img src="https://www.xihrni.com/post-images/1631076081071.png" alt="远程桌面连接中" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1631076327702.png" alt="frp管理面板" loading="lazy"></p>
<p>然后用向日葵连接想检查一下 <code>frp</code> 问题，居然也一直连接连中。这时想着估计就是客户那边本地网络的问题，打电话过去了解却说网络没有任何变化一切正常</p>
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1631076766667.png" alt="向日葵远控" loading="lazy"></figure>
<p>前一天的上午还有连接过并没有问题。这个时候开始判断那台电脑可能网络问题或者是系统升级什么之类的开始不断尝试连接，再过了大概15分钟左右，远程桌面突然连上了（因为一直没有点取消）</p>
<h3 id="lockbit-勒索病毒">Lockbit 勒索病毒</h3>
<p>连上之后发现系统通知有提示发现威胁，并且病毒防护程序被关闭，心里一惊估计不妙</p>
<figure data-type="image" tabindex="2"><img src="https://www.xihrni.com/post-images/1631078814006.png" alt="Windows系统通知" loading="lazy"></figure>
<p>提示在前一天的下午出现了病毒程序，除系统目录外的所有目录大部分常用文件都被加密了，同时还放了一个说明文档（说明此电脑已被加密，如果要解密则需要支付XX价格之类的），加密文件为源文件名称+ <code>.lockbit</code> 后缀</p>
<p><img src="https://www.xihrni.com/post-images/1631078998026.png" alt="压缩文件" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1631079280321.png" alt="代码文件" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1631079353610.png" alt="说明文档" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1631079532589.png" alt="说明文档翻译" loading="lazy"></p>
<p>并且操作时非常卡，打开一个目录要1分多钟，检查任务管理器发现一个奇怪的进程，右键打开目录后发现还有个远程软件，可疑的文件应该是目录植入程序，并且放在用户目录音乐文件夹下</p>
<figure data-type="image" tabindex="3"><img src="https://www.xihrni.com/post-images/1631079694239.png" alt="木马程序" loading="lazy"></figure>
<h3 id="解密防护">解密&amp;防护</h3>
<p>直接先将进程结束后删除这两个文件，然后上网搜寻解密方法发现暂时无解。安装了一些国产软件想对文件进行解密，干脆直接没检测到被加密文件。访问说明文档里面的两个解密网址也无法打开，不知道是网页已经失效还是需要科学上网已经不清楚了</p>
<p>后来在论坛发现到目前为止还是很多人遇到这个病毒，基本上也没什么办法，只能重新安装系统。而需要的文件则一般靠文件恢复的方式找回，解密目前还是困难重重</p>
<blockquote>
<p>参考网址：https://bbs.360.cn/thread-15836302-1-1.html</p>
</blockquote>
<p>平时还是要多加防护，可以参考以下网址。这么多年个人电脑使用真没装过什么杀毒软件防火墙之类的，还是运气使然，否者一旦遇到真没什么办法（远程桌面端口开放在其他电脑也开了，系统盘也是官网下的，账户密码也不是简单密码）。真是破坏性灾难~~</p>
<blockquote>
<p>参考网址：<br>
https://bbs.360.cn/thread-15858154-1-1.html<br>
https://www.kaspersky.com.cn/resource-center/threats/lockbit-ransomware</p>
</blockquote>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 远程克隆/拉取提示：'Permission denied (publickey).' 解决记录]]></title>
        <id>https://www.xihrni.com/post/git-yuan-cheng-ke-long-la-qu-ti-shi-permission-denied-publickey/</id>
        <link href="https://www.xihrni.com/post/git-yuan-cheng-ke-long-la-qu-ti-shi-permission-denied-publickey/">
        </link>
        <updated>2021-08-23T10:58:33.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>😳准备把存放在Coding平台上的代码发布到某一台服务器上时，执行 <code>git clone xxx</code> 突然提示 <code>Permission denied (publickey).</code></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>😳准备把存放在Coding平台上的代码发布到某一台服务器上时，执行 <code>git clone xxx</code> 突然提示 <code>Permission denied (publickey).</code></p>
</blockquote>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1630398641542.png" alt="Permission denied" loading="lazy"></figure>
<h3 id="部署公钥">部署公钥</h3>
<p>最开始以为是公钥复制错了，所以把仓库里面的公钥删除，重新将服务器上的公钥进行部署（最后一条）</p>
<p><img src="https://www.xihrni.com/post-images/1630412914894.png" alt="部署公钥" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1630399322338.png" alt="部署公钥" loading="lazy"></p>
<p>但是依然提示 <code>Permission denied (publickey).</code></p>
<h3 id="known_hosts">known_hosts</h3>
<p>后来上网查找问题时发现有人说可能是因为第一次 <code>git clone</code> 的时候提示：'Are you sure you want to continue connecting (yes/no)?' 没有输入 <code>yes</code> 就直接回车了导致的</p>
<p><img src="https://www.xihrni.com/post-images/1630412953703.png" alt="" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1630400353463.png" alt="需要输入yes" loading="lazy"></p>
<p>但是我却发现我重新输入 <code>git clone</code> 怎么也不会重新提示，让我输入 <code>yes</code> 的步骤。就开始在网上查询如何让我的 <code>git clone</code> 命令重新提示这步，但是怎么查询貌似都没有结果，直到我想起 <code>known_hosts</code> 文件</p>
<blockquote>
<p>ssh 会把你每个你访问过计算机的公钥（public key）都记录在 <code>~/.ssh/known_hosts</code>。当下次访问相同计算机时，OpenSSH会核对公钥。如果公钥不同，OpenSSH会发出警告，避免你受到 DNS Hijack 之类的攻击</p>
</blockquote>
<p>然后我打算查看一下我的 <code>known_hosts</code> 文件，却发现了一点蹊跷之处。我的 <code>~/.ssh</code> 目录下面没有这个文件，这就很奇怪了</p>
<figure data-type="image" tabindex="2"><img src="https://www.xihrni.com/post-images/1630400888669.png" alt="ssh目录" loading="lazy"></figure>
<p>只有最开始生成的秘钥对和一些其他机器的公钥文件，并且我还上网查了是不是 ssh 配置相关，没有生成<code>known_hosts</code> 文件，发现并不是。找了好一会突然想起，难道这个文件在 <code>www</code> 用户（此时我登录用户为 <code>root</code>）？立马去 <code>/home/www/.ssh</code> 目录下发现，果然在这里</p>
<figure data-type="image" tabindex="3"><img src="https://www.xihrni.com/post-images/1630401299855.png" alt="www用户目录" loading="lazy"></figure>
<p>我删除了里面这唯一一条记录，重新进行 <code>git clone</code>，果然进行了提示</p>
<figure data-type="image" tabindex="4"><img src="https://www.xihrni.com/post-images/1630401520775.png" alt="重新提示" loading="lazy"></figure>
<p>但是！我输入完 <code>yes</code> 后，依然还是相同的提示... <code>Permission denied (publickey).</code></p>
<h3 id="www用户">WWW用户</h3>
<p>接着又试了很多方法，比如有人说要重新生成秘钥对，也试过了依然还是同样的错误，还有人说用 <code>git -T</code> 绑定一下，也试过提示正确的公钥指纹</p>
<p>最后想起为什么 <code>known_hosts</code> 文件会在 <code>www</code> 用户目录呢，哦原来是用 <code>www</code> 用户执行的 <code>git</code> 命令，所以才在 www 用户目录生成了 <code>known_hosts</code> 文件</p>
<p>接着把秘钥对复制到 <code>www</code> 用户目录下（或者用 <code>www</code> 用户重新生成），然后重新执行 <code>git clone</code> 命令，成功~</p>
<figure data-type="image" tabindex="5"><img src="https://www.xihrni.com/post-images/1630412169314.png" alt="clone成功" loading="lazy"></figure>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 指定远程仓库使用不同秘钥]]></title>
        <id>https://www.xihrni.com/post/git-zhi-ding-yuan-cheng-cang-ku-shi-yong-bu-tong-mi-yao/</id>
        <link href="https://www.xihrni.com/post/git-zhi-ding-yuan-cheng-cang-ku-shi-yong-bu-tong-mi-yao/">
        </link>
        <updated>2021-05-16T11:31:53.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>😳针对不同的远程仓库操作想使用不同的秘钥文件，或者说使用别人已有的秘钥文件进行操作</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>😳针对不同的远程仓库操作想使用不同的秘钥文件，或者说使用别人已有的秘钥文件进行操作</p>
</blockquote>
<!-- more -->
<h3 id="生成-ssh-key">生成 SSH key</h3>
<pre><code class="language-shell">ssh-keygen -t rsa -b 4096 -C &quot;xihrni@126.com&quot;
</code></pre>
<p>或使用</p>
<pre><code class="language-shell">ssh-keygen -t ed25519 -C &quot;xihrni@126.com&quot;
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1652720009739.png" alt="ed25519" loading="lazy"></figure>
<h3 id="添加-git-config-配置文件">添加 Git config 配置文件</h3>
<p>在 <code>.ssh</code> 目录下新建 <code>config</code> 文件添加如下代码（案例为两个不同远程仓库，根据需求修改）</p>
<pre><code class="language-shell">vim ~/.ssh/config
</code></pre>
<p>输入 <code>i</code> 进入编辑状态，粘贴代码（删除注释），输入 <code>:wq</code> 保存文件并退出</p>
<pre><code class="language-shell">Host e.coding.net # 主机
  HostName e.coding.net # 主机名称
  User xihrni # 用户名
  IdentityFile /Users/xihrni/.ssh/id_ed25519 # 私钥文件
  IdentitiesOnly yes

Host gitee.com
  HostName gitee.com
  User xihrni
  IdentityFile /User/xihrni/.ssh/id_rsa
  IdentitiesOnly yes
</code></pre>
<p><img src="https://www.xihrni.com/post-images/1652720900231.png" alt="config内容" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1652720905559.png" alt="秘钥文件目录" loading="lazy"></p>
<p>此时操作如上两个远程仓库时会调用指定的秘钥进行认证（记得将对应的公钥上传到远程仓库）</p>
<blockquote>
<p>可通过此命令进行远程仓库身份验证</p>
</blockquote>
<pre><code class="language-shell">ssh -T git@e.coding.net
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://www.xihrni.com/post-images/1652721303610.png" alt="验证通过" loading="lazy"></figure>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CentOS 挂载新磁盘（阿里云ECS）]]></title>
        <id>https://www.xihrni.com/post/a-li-yun-ecs-centos7-gua-zai-xin-ci-pan/</id>
        <link href="https://www.xihrni.com/post/a-li-yun-ecs-centos7-gua-zai-xin-ci-pan/">
        </link>
        <updated>2020-12-30T01:57:51.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>😳 服务器磁盘已满，新购了一块云盘，包年包月的磁盘会自动挂载，不用重启，但是需要手动进入系统格式化磁盘、分区、挂载路径<br>
本文只适用小于2T容量的磁盘</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>😳 服务器磁盘已满，新购了一块云盘，包年包月的磁盘会自动挂载，不用重启，但是需要手动进入系统格式化磁盘、分区、挂载路径<br>
本文只适用小于2T容量的磁盘</p>
</blockquote>
<!-- more -->
<p>先查看当前磁盘信息</p>
<pre><code class="language-shell">&gt; fdisk -l
</code></pre>
<p><img src="https://www.xihrni.com/post-images/1609294893165.png" alt="fdisk -l" loading="lazy"><br>
<code>/dev/vdc</code> 就是新添加的磁盘</p>
<h3 id="创建分区">创建分区</h3>
<p>进入分区模式</p>
<pre><code class="language-shell">&gt; fdisk -u /dev/vdc
</code></pre>
<ol>
<li>输入 <code>n</code> 创建一个新分区</li>
<li>输入 <code>p</code> 选择分区类型为主分区</li>
<li>输入分区编号，直接按回车键选择默认值下一步</li>
<li>输入第一个可用的扇区编号，直接按回车键选择默认值下一步</li>
<li>输入最后一个扇区编号，直接按回车键选择默认值下一步</li>
<li>输入 <code>p</code> 查看分区情况</li>
<li>输入 <code>w</code> 开始分区，并且分区完成后会自动退出分区模式</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1609295585447.png" alt="fdisk -u" loading="lazy"></figure>
<p>查看新分区信息</p>
<pre><code class="language-shell">&gt; fdisk -lu /dev/vdc
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://www.xihrni.com/post-images/1609296021975.png" alt="fdisk -lu" loading="lazy"></figure>
<h3 id="创建文件系统">创建文件系统</h3>
<p>创建一个ext4文件系统</p>
<pre><code class="language-shell">&gt; mkfs -t ext4 /dev/vdc1
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://www.xihrni.com/post-images/1609296123347.png" alt="mkfs -t" loading="lazy"></figure>
<h3 id="挂载分区">挂载分区</h3>
<p>写入新分区信息，启动开机自动挂载分区</p>
<blockquote>
<p>如果要把数据盘单独挂载到某个文件夹，例如单独用来存放网页，则将命令中/mnt替换成所需的挂载点路径。</p>
</blockquote>
<pre><code class="language-shell">&gt; cp /etc/fstab /etc/fstab.bak # 备份原本的文件
&gt; echo `blkid /dev/vdc1 | awk '{print $2}' | sed 's/\&quot;//g'` /mnt ext4 defaults 0 0 &gt;&gt; /etc/fstab
</code></pre>
<p>挂载分区</p>
<pre><code class="language-shell">&gt; mount /dev/vdc1 /mnt
</code></pre>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL 条件批量更新与插入（PHP实现）]]></title>
        <id>https://www.xihrni.com/post/mysql-tiao-jian-pi-liang-geng-xin-yu-cha-ru-php-shi-xian/</id>
        <link href="https://www.xihrni.com/post/mysql-tiao-jian-pi-liang-geng-xin-yu-cha-ru-php-shi-xian/">
        </link>
        <updated>2020-06-17T01:54:38.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>😳有个接口需要同时修改关联数据，但是传过来的关联数据包含原本的数据（更新）和新的数据（插入），为了区分则让前端将原来的数据必须传ID，看看如何在一个接口中实现更新和插入操作</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>😳有个接口需要同时修改关联数据，但是传过来的关联数据包含原本的数据（更新）和新的数据（插入），为了区分则让前端将原来的数据必须传ID，看看如何在一个接口中实现更新和插入操作</p>
</blockquote>
<!-- more -->
<h3 id="接口需求">接口需求</h3>
<p>请求地址</p>
<pre><code class="language-text">POST {{domain}}/v1/user/api-envs/:id
</code></pre>
<p>请求数据</p>
<pre><code class="language-json">{
	&quot;title&quot;: &quot;环境变量组1&quot;,
	&quot;variables&quot;: [
		{
			&quot;id&quot;: 1,
			&quot;name&quot;: &quot;admin_token1&quot;,
			&quot;value&quot;: &quot;123456&quot;
		},
		{
			&quot;name&quot;: &quot;user_token&quot;,
			&quot;value&quot;: &quot;456789&quot;
		},
		{
			&quot;id&quot;: 2,
			&quot;name&quot;: &quot;admin_token2&quot;,
			&quot;value&quot;: &quot;1234567&quot;
		},
		{
			&quot;id&quot;: 4,
			&quot;name&quot;: &quot;admin_token4&quot;,
			&quot;value&quot;: &quot;1234568&quot;
		},
		{
			&quot;name&quot;: &quot;user_token2&quot;,
			&quot;value&quot;: &quot;4567890&quot;
		}
	]
}
</code></pre>
<p>数据库表结构<br>
<code>api_env</code> 环境</p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:right">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">int(11) unsigned</td>
<td style="text-align:right">ID</td>
</tr>
<tr>
<td style="text-align:left">title</td>
<td style="text-align:left">varchar(32)</td>
<td style="text-align:right">标题</td>
</tr>
<tr>
<td style="text-align:left">created_at</td>
<td style="text-align:left">timestamp</td>
<td style="text-align:right">创建时间</td>
</tr>
</tbody>
</table>
<p><code>api_env_variable</code> 环境变量</p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:right">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">int(11) unsigned</td>
<td style="text-align:right">ID</td>
</tr>
<tr>
<td style="text-align:left">env_id</td>
<td style="text-align:left">int(11) unsigned</td>
<td style="text-align:right">环境ID</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">varchar(32)</td>
<td style="text-align:right">名称</td>
</tr>
<tr>
<td style="text-align:left">value</td>
<td style="text-align:left">varchar(255)</td>
<td style="text-align:right">值</td>
</tr>
<tr>
<td style="text-align:left">created_at</td>
<td style="text-align:left">timestamp</td>
<td style="text-align:right">创建时间</td>
</tr>
</tbody>
</table>
<h3 id="mysql-条件批量更新语句">MySQL 条件批量更新语句</h3>
<pre><code class="language-sql">UPDATE `api_env_variable`
SET `name` = CASE `id`
    WHEN 1 THEN 'admin_token1' 
    WHEN 2 THEN 'admin_token2'
    WHEN 4 THEN 'admin_token4'
END
WHERE `id` IN (1,2,4)
</code></pre>
<p>后面的条件 <code>id</code> 用于提升效率，还可加 <code>AND</code> 条件筛选</p>
<h3 id="php-实现">PHP 实现</h3>
<p>使用 Yii2 框架进行示例：</p>
<pre><code class="language-php">$data = Yii::$app-&gt;request-&gt;post();

// 更新环境数据
// ... 

// 更新和插入环境变量数据
if ($data['variables']) {
    $updateData = []; // 需要更新的数据
    $insertData = []; // 需要插入的数据
    foreach ($data['variables'] as $v) {
        // 过滤数据
        if ($v['name'] &amp;&amp; $v['value']) {
            // 判断是插入还是更新
            $v['id'] ? $updateData[] = $v : $insertData[] = $v;
        }
    }

    // 开启事务
    $result = Yii::$app-&gt;db-&gt;transaction(function ($e) use ($id, $updateData, $insertData) {
        $table = ApiEnvVariable::tableName();

        // 更新
        if ($updateData) {
            $ids = $name = $value = '';
            foreach ($updateData as $v) {
                $ids   .= $v['id'] . ',';
                $name  .= &quot; WHEN ${v['id']} THEN '${v['name']}'&quot;;
                $value .= &quot; WHEN ${v['id']} THEN '${v['value']}'&quot;;
            }

            $ids = rtrim($ids, ',');
            $sql = &quot;UPDATE ${table} SET name = CASE id ${name} END, value = CASE id ${value} END WHERE id IN (${ids}) AND is_trash = 0&quot;;

            try {
                $result = Yii::$app-&gt;db-&gt;createCommand($sql)-&gt;execute();
                // var_dump($result);
            } catch (Exception $e) {
                // var_dump($e-&gt;getMessage());
                throw new ServerErrorHttpException(Yii::t('app/error', 'Update failed.'));
                $e-&gt;transaction-&gt;rollBack();
            }
        }

        // 插入
        if ($insertData) {
            $insertData = array_map(function ($v) use ($id) {
                return [
                    'env_id' =&gt; $id,
                    'name'   =&gt; $v['name'],
                    'value'  =&gt; $v['value'],
                ];
            }, $insertData);

            return Yii::$app-&gt;db-&gt;createCommand()
                -&gt;batchInsert($table, ['env_id', 'name', 'value'], $insertData)
                -&gt;execute();
        }

        // $e-&gt;transaction-&gt;commit(); // 无错误或异常执行完自动提交事务
        return true;
    });

    // 验证返回
    // ...
}
</code></pre>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yii2 自定义组件配置 PhpStorm 编辑器代码提示]]></title>
        <id>https://www.xihrni.com/post/yii2-zi-ding-yi-zu-jian-pei-zhi-phpstorm-bian-ji-qi-dai-ma-ti-shi/</id>
        <link href="https://www.xihrni.com/post/yii2-zi-ding-yi-zu-jian-pei-zhi-phpstorm-bian-ji-qi-dai-ma-ti-shi/">
        </link>
        <updated>2020-06-05T01:34:03.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="自定义组件配置">😳自定义组件配置</h3>
<p>在 <code>web.php</code> 的组件配置中添加了一个自定义用户组件</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="自定义组件配置">😳自定义组件配置</h3>
<p>在 <code>web.php</code> 的组件配置中添加了一个自定义用户组件</p>
<!-- more -->
<pre><code class="language-php">&lt;?php

$config = [
    ...
    'components' =&gt; [
        ...
        'admin' =&gt; [
            'class' =&gt; 'yii\web\User',
            'identityClass' =&gt; 'app\models\Admin',
            'enableAutoLogin' =&gt; true,
            'enableSession' =&gt; false,
            'loginUrl' =&gt; null,
        ],
        ...
    ],
    ...
]

...

return $config;
</code></pre>
<p>当在使用的时候 PhpStorm 编辑器则会提示“Property accessed via magic method”信息，并且无法关联类也无法进行自动提示代码补全</p>
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1591321895158.png" alt="提示“Property accessed via magic method”信息" loading="lazy"></figure>
<h3 id="创建声明类文件">创建声明类文件</h3>
<p>给 IDE 一些提示的最好方法是使用自己的 Yii 文件，运行代码时它实际上并不使用。这个文件可以命名为 <code>Yii.php</code> ，在项目根目录创建。其内容如下：</p>
<pre><code class="language-php">&lt;?php

use app\models\Admin;

/**
 * Yii bootstrap file.
 * Used for enhanced IDE code autocompletion.
 */
class Yii extends \yii\BaseYii
{
    /**
     * @var BaseApplication|WebApplication|ConsoleApplication the application instance
     */
    public static $app;
}

/**
 * Class BaseApplication
 * Used for properties that are identical for both WebApplication and ConsoleApplication
 *
// * @property \app\components\RbacManager $authManager The auth manager for this application. Null is returned if auth manager is not configured. This property is read-only. Extended component.
// * @property \app\components\Mailer $mailer The mailer component. This property is read-only. Extended component.
 */
abstract class BaseApplication extends yii\base\Application
{
}

/**
 * Class WebApplication
 * Include only Web application related components here
 *
 * @property Admin $admin The user component. This property is read-only. Extended component.
// * @property \app\components\User $user The user component. This property is read-only. Extended component.
// * @property \app\components\MyResponse $response The response component. This property is read-only. Extended component.
// * @property \app\components\ErrorHandler $errorHandler The error handler application component. This property is read-only. Extended component.
 */
class WebApplication extends yii\web\Application
{
}

/**
 * Class ConsoleApplication
 * Include only Console application related components here
 *
// * @property \app\components\ConsoleUser $user The user component. This property is read-only. Extended component.
 */
class ConsoleApplication extends yii\console\Application
{
}
</code></pre>
<blockquote>
<p><code>BaseApplication</code> 表示包含所有环境下的 Yii 类<br>
<code>WebApplication</code> 表示 Web 环境下的 Yii 类<br>
<code>ConsoleApplication</code> 表示 Cli 环境下的 Yii 类</p>
</blockquote>
<p>由于已经有一个 Yii 的类了，所以 PhpStorm 编辑器会提示“Multiple Implementations”，我们需要将 <code>vendor/yiisoft/yii2/Yii.php</code> 文件标记为纯文本</p>
<figure data-type="image" tabindex="2"><img src="https://www.xihrni.com/post-images/1591322367077.png" alt="将  文件标记为纯文本" loading="lazy"></figure>
<p>可以看到我们在给每个对应的类添加了 @property 文档注释，之后再去实际业务代码中会发现已经不会提示“Property accessed via magic method”信息了并且能像正常的类关联和自动提示代码补全</p>
<figure data-type="image" tabindex="3"><img src="https://www.xihrni.com/post-images/1591322835443.png" alt="正常的类关联和自动提示代码补全" loading="lazy"></figure>
<h3 id="忽略版本控制">忽略版本控制</h3>
<p>可以将自定义的 <code>Yii.php</code> 加入到 <code>.gitignore</code> 忽略文件中提交到代码版本进行推送到线上协作，也可以加入到本地全局忽略文件不进行提交</p>
<blockquote>
<p>如果已有全局忽略文件则直接在文件中追加 <code>/Yii.php</code> 字符串即可</p>
</blockquote>
<pre><code class="language-shell">&gt; git config --global core.excludesfile ~/.gitignore_global
# 如果没有 `.gitignore_global` 文件则进行创建
&gt; echo '/Yii.php' &gt; .gitignore_global
</code></pre>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 从远程拉取数据时提示：'You have not concluded your merge (MERGE_HEAD exists).' 解决方法]]></title>
        <id>https://www.xihrni.com/post/git-cong-yuan-cheng-la-qu-shu-ju-shi-ti-shi-you-have-not-concluded-your-merge-merge_head-exists/</id>
        <link href="https://www.xihrni.com/post/git-cong-yuan-cheng-la-qu-shu-ju-shi-ti-shi-you-have-not-concluded-your-merge-merge_head-exists/">
        </link>
        <updated>2020-06-02T03:07:51.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="当前状态">😳当前状态</h3>
<p>有些代码未加到忽略文件然后系统运行中被修改之后如果未处理进行拉取，在操作的过程中可能出现了如下状态</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="当前状态">😳当前状态</h3>
<p>有些代码未加到忽略文件然后系统运行中被修改之后如果未处理进行拉取，在操作的过程中可能出现了如下状态</p>
<!-- more -->
<pre><code class="language-shell">&gt; git status
# On branch develop
# Your branch and 'origin/develop' have diverged,
# and have 9 and 7 different commits each, respectively.
#   (use &quot;git pull&quot; to merge the remote branch into yours)
#
# All conflicts fixed but you are still merging.
#   (use &quot;git commit&quot; to conclude merge)
#
# Changes not staged for commit:
#   (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
#   (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)
#
#       modified:   config/site_config.php
#       modified:   sitemap_article.xml
#       modified:   sitemap_goods.xml
#       modified:   sitemaps.xml
#
no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre>
<p>这个时候可以先备份修改过的文件，然后重置到修改之前的状态再拉取试试</p>
<pre><code class="language-shell">&gt; git checkout -- config/site_config.php
&gt; git checkout -- sitemap_article.xml
&gt; git checkout -- sitemap_goods.xml
&gt; git checkout -- sitemap.xml
&gt; git pull
</code></pre>
<p>如果提示以下信息则需要使用强制合并进行操作</p>
<pre><code class="language-shell">&gt; git pull
You have not concluded your merge (MERGE_HEAD exists).
Please, commit your changes before you can merge.
</code></pre>
<h3 id="强制合并">强制合并</h3>
<blockquote>
<p>强制合并会覆盖本地版本，请先备份相关文件</p>
</blockquote>
<pre><code class="language-shell">&gt; git fetch --all
&gt; git reset --hard origin/master
&gt; git fetch
</code></pre>
<p>再进行拉取则没有问题了</p>
<pre><code class="language-shell">&gt; git pull
</code></pre>
<p>😬</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Borderlands 2 设置为繁体中文（Epic Games 平台）]]></title>
        <id>https://www.xihrni.com/post/borderlands-2-she-zhi-wei-fan-ti-zhong-wen-epic-games-ping-tai/</id>
        <link href="https://www.xihrni.com/post/borderlands-2-she-zhi-wei-fan-ti-zhong-wen-epic-games-ping-tai/">
        </link>
        <updated>2020-06-02T00:24:01.000Z</updated>
        <summary type="html"><![CDATA[<p>😳打开 Epic Games 平台先安装好游戏后进入设置界面</p>
]]></summary>
        <content type="html"><![CDATA[<p>😳打开 Epic Games 平台先安装好游戏后进入设置界面</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://www.xihrni.com/post-images/1591057609359.png" alt="Epic Games 平台设置界面" loading="lazy"></figure>
<p>滑动到最下方的管理游戏，展开 BORDERLANDS 2，勾选 <code>额外命令行参数</code> 后在输入框粘贴此字符： <code>-epiclocale=zh-Hant</code><br>
<img src="https://www.xihrni.com/post-images/1591057832534.png" alt="Epic Games 平台设置界面" loading="lazy"></p>
<p>返回到游戏库启动即可</p>
<p>启动界面还是英文不用理他，点 <code>PLAY</code> 进入游戏后就是繁体中文了<br>
<img src="https://www.xihrni.com/post-images/1591058065557.png" alt="游戏启动界面" loading="lazy"><br>
<img src="https://www.xihrni.com/post-images/1591058184453.png" alt="游戏菜单界面" loading="lazy"><br>
😬</p>
]]></content>
    </entry>
</feed>